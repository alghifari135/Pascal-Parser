pascal>header_programprogram_body|header_programmain_body
program_body>var_declarationmain_body
header_program>PROGRAMB2
B2>identifierC
PROGRAM>program
var_declaration>C1var_name
var_name>fill_one_varvar_name|C9C8|identifierC8
fill_one_var>C9C8|identifierC8
add_var>Jidentifier|JC9
C1>var
F>:
G>typeC
C8>FG
C9>identifieradd_var
J>,
type>integer|real|char|Lnumber|QW2|QY2|QB3
simple_type>integer|real|char|Lnumber
type_ident>integer|real|char
number>signD4|signD5|0|1|2|3|4|5|6|7|8|9
real>signD4|signD5|0|1|2|3|4|5|6|7|8|9
integer>signD5|0|1|2|3|4|5|6|7|8|9
decimalpart>RD5
sign>+|-
origin_digit>0|1|2|3|4|5|6|7|8|9
character>0|1|2|3|4|5|6|7|8|9|i|O|o|P|p|e|R|r|T|t|Y|y|U|u|I|l|Q|q|W|w|E|f|G|g|H|h|J|j|K|k|L|A|a|S|s|D|d|F|v|B|b|N|n|M|m|Z|z|X|x|C|c|V|{|[|}|]|\|`|~|!|@|#|$|%|^|&|*|(|)|_|+|=|>|||.|?|/||J||F|C||‘
alphabet>i|O|o|P|p|e|R|r|T|t|Y|y|U|u|I|l|Q|q|W|w|E|f|G|g|H|h|J|j|K|k|L|A|a|S|s|D|d|F|v|B|b|N|n|M|m|Z|z|X|x|C|c|V
symbol>{|[|}|]|\|`|~|!|@|#|$|%|^|&|*|(|)|_|+|=|-|||.|?|/||J||F|C||‘
K>..
L>numberK
M>array
N>[
O>]
P>of
Q>MN
U2>index_typeO
V2>U2P
W2>V2simple_type
X2>V2Q
Y2>X2W2
A3>index_typeJ
B3>A3W2
D4>integerdecimal_part
D5>origin_digitinteger
R>.
U1>‘
T2>characterU1
main_body>F1G1
stat_list>statstat_list|H1I1|D1E1|D1begin_end|J1K1|Y1Z1|A2C2|D2F2|R1G2|O1G2|P1G2
stat>H1I1|D1E1|D1begin_end|J1K1|Y1Z1|A2C2|D2F2|R1G2|O1G2|P1G2
begin_end>F1I2
S>begin
T>end
Z>for
STEP>step
F1>Sstat_list
G1>TR
L1>Zidentifier
S1>(
T1>)
I2>TC
logic_op>and|or
math_op>+|>|*|div|mod
condition_op>||=|=|=|
J5>J2T1
J2>S1expression
K2>condition_opexpression
L2>K2T1
condition_exp>J2L2
M2>identifierN
N2>int_expressionO
P2>N2N
Q2>P2N2
R2>int_expressionJ
S2>R2N2
variable>alphabetadd_character|i|O|o|P|p|e|R|r|T|t|Y|y|U|u|I|l|Q|q|W|w|E|f|G|g|H|h|J|j|K|k|L|A|a|S|s|D|d|F|v|B|b|N|n|M|m|Z|z|X|x|C|c|V|_|M2N2|M2Q2|M2S2
expression>factoradd_factor|signvariable|alphabetadd_character|i|O|o|P|p|e|R|r|T|t|Y|y|U|u|I|l|Q|q|W|w|E|f|G|g|H|h|J|j|K|k|L|A|a|S|s|D|d|F|v|B|b|N|n|M|m|Z|z|X|x|C|c|V|_|M2N2|M2Q2|M2S2|signD5|signD4|0|1|2|3|4|5|6|7|8|9|signJ5|J2T1|U1T2
int_expression>factoradd_factor
add_factor>math_opint_expression|math_opfactor
factor>signvariable|alphabetadd_character|i|O|o|P|p|e|R|r|T|t|Y|y|U|u|I|l|Q|q|W|w|E|f|G|g|H|h|J|j|K|k|L|A|a|S|s|D|d|F|v|B|b|N|n|M|m|Z|z|X|x|C|c|V|_|M2N2|M2Q2|M2S2|signD5|0|1|2|3|4|5|6|7|8|9|signJ5|J2T1
H1>identifierU
I1>expressionC
U>:=
C>;
if_else_stat>D1E1|D1begin_end
D1>C1W
E1>begin_endadd_else
C1>Vcondition_exp
add_else>ELSEbegin_end|ELSEif_else_stat
ELSE>else
V>if
W>then
D2>Q1S1
E2>C9T1
F2>E2C
G2>S1F2
O1>write
P1>writeln
Q1>read
R1>readln
Y>do
J1>Xcondition_exp
X>while
K1>Ybegin_end
A2>M1stat_list
B2>N1condition_exp
C2>B2C
M1>repeat
N1>until
Y1>V1W1
way>to|downto
op_step>STEPinteger
V1>L1U
W1>integerway
X1>integerop_step
Z1>X1K1
